[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "retromcp"
version = "1.0.0"
description = "MCP server for controlling RetroPie"
readme = "README.md"
requires-python = ">=3.8"
dependencies = [
    "mcp>=1.0.0",
    "paramiko>=3.0.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "ruff>=0.1.0",
]

[project.scripts]
retromcp = "retromcp.server:main"

[tool.ruff]
target-version = "py38"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "ANN", # flake8-annotations
    "S",  # flake8-bandit
    "N",  # pep8-naming
    "D",  # pydocstyle
    "RUF", # ruff-specific
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "D100",  # missing docstring in public module
    "D104",  # missing docstring in public package
    "D107",  # missing docstring in __init__
    "S101",  # use of assert (fine for tests)
    "D203",  # one blank line before class docstring
    "D213",  # multi-line docstring summary on second line
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "D103", "ANN201", "ANN001"]
"*/__init__.py" = ["F401", "D104"]
"*.py" = ["S603"]  # Allow subprocess calls

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party = ["retromcp"]
force-single-line = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=retromcp",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow tests",
    # Component-specific markers
    "tools: Tool layer tests",
    "infrastructure: Infrastructure layer tests",
    "application: Application layer tests",
    "domain: Domain layer tests",
    # Tool-specific markers
    "hardware_tools: Hardware monitoring tools tests",
    "gaming_tools: Gaming system tools tests",
    "state_tools: State management tools tests",
    "system_tools: System management tools tests",
    "docker_tools: Docker tools tests",
    # Infrastructure-specific markers
    "ssh_repos: SSH repository tests",
    "controller_repo: Controller repository tests",
    "docker_repo: Docker repository tests",
    "emulator_repo: Emulator repository tests",
    "state_repo: State repository tests",
    "system_repo: System repository tests",
    # Special markers
    "security: Security and validation tests",
    "contract: Contract and compliance tests",
]