# RetroMCP Configuration Example
# Copy this file to .env and modify with your settings

# Required: RetroPie connection details
RETROPIE_HOST=192.168.1.100
RETROPIE_USERNAME=pi

# SECURITY NOTE: DO NOT use root, admin, or administrator usernames
# These are blocked for security reasons
# The username must have appropriate sudo permissions (see migration guide)

# SSH Authentication (choose ONE method)
# Method 1: SSH Key Authentication (RECOMMENDED for security)
RETROPIE_KEY_PATH=~/.ssh/retromcp_key

# Method 2: Password Authentication (less secure)
# RETROPIE_PASSWORD=your_ssh_password

# Optional: SSH port (default is 22)
RETROPIE_PORT=22

# Optional: Known hosts file path for host verification
# RETROPIE_KNOWN_HOSTS=~/.ssh/known_hosts

# Security Features:
# - Root user access is blocked
# - SSH host verification is enforced
# - Sudo commands are restricted to specific allowed operations
# - All user inputs are validated to prevent injection attacks
# - Credentials are cleared from memory after use

# User Permission Setup:
# The user specified in RETROPIE_USERNAME must be able to run sudo commands.
# Two methods are supported:
# 1. Add user to 'retromcp' group (recommended): sudo usermod -a -G retromcp <username>
# 2. Use 'pi' user (fallback for standard RetroPie systems)
#
# To verify permissions: make verify-permissions (on target system)

# Migration from insecure setup:
# If you previously used passwordless sudo (pi ALL=(ALL) NOPASSWD:ALL),
# run the security migration script to upgrade to secure targeted rules:
# ./scripts/security-migration.sh